{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","onFormSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","className","s","form","onSubmit","inputs","label","labelName","input","type","pattern","title","required","onChange","button","Filter","filter","onChangeFilterValue","Contact","contact","onDelete","id","onClick","ContactList","filteredContacts","deleteContact","contacts","map","filteredContact","App","CONTACTS","JSON","parse","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","toLowerCase","includes","newName","newNumber","preventDefault","find","window","alert","prevState","nanoid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad7c837f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1gIgh\",\"labelName\":\"ContactForm_labelName__13vHK\",\"inputs\":\"ContactForm_inputs__3Rt5N\",\"input\":\"ContactForm_input__bGHGD\",\"button\":\"ContactForm_button__2fleK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1N7W9\",\"title\":\"Filter_title__3JxrA\",\"input\":\"Filter_input__3R29v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3F0WU\",\"button\":\"Contact_button__2nU6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__UsUM-\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm({ onFormSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if (name === 'name') setName(value);\r\n    else if (name === 'number') setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    onFormSubmit(e, name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <div className={s.inputs}>\r\n        <label className={s.label}>\r\n          <p className={s.labelName}>Name</p>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          <p className={s.labelName}>Number</p>\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ filter, onChangeFilterValue }) {\r\n  return (\r\n    <div className={s.filter}>\r\n      <p className={s.title}>Find contacts by name</p>\r\n      <label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filterValue\"\r\n          value={filter}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\r\n            For example Adrian, Jacob Mercer, Charles de Batz de Castelmore\r\n            d'Artagnan\"\r\n          onChange={onChangeFilterValue}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilterValue: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nexport default function Contact({ contact, onDelete }) {\r\n  const { id, name, number } = contact;\r\n  return (\r\n    <li className={s.contact}>\r\n      <p>{name}</p>\r\n      <p>{number}</p>\r\n      <button className={s.button} type=\"button\" value={id} onClick={onDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList({ filteredContacts, deleteContact }) {\r\n  return (\r\n    <ul className={s.contacts}>\r\n      {filteredContacts.map(filteredContact => (\r\n        <Contact\r\n          key={filteredContact.id}\r\n          contact={filteredContact}\r\n          onDelete={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList/';\r\n\r\nexport default function App() {\r\n  const CONTACTS = 'contacts';\r\n  const [contacts, setContacts] = useState(\r\n    () => JSON.parse(localStorage.getItem(CONTACTS)) ?? [],\r\n  );\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(CONTACTS, JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addItemToContacts = (e, newName, newNumber) => {\r\n    e.preventDefault();\r\n\r\n    const isFound = contacts.find(\r\n      ({ name }) => name.toLowerCase() === newName.toLowerCase(),\r\n    );\r\n    if (isFound) return window.alert(`${newName} is already in contacts.`);\r\n\r\n    setContacts(prevState => [\r\n      { id: nanoid(), name: newName, number: newNumber },\r\n      ...prevState,\r\n    ]);\r\n  };\r\n\r\n  const deleteItemFromContacts = e => {\r\n    e.preventDefault();\r\n    setContacts(prevState =>\r\n      prevState.filter(({ id }) => id !== e.target.value),\r\n    );\r\n  };\r\n\r\n  const setFilterValue = e => setFilter(e.target.value);\r\n\r\n  const filterContacts = () => {\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n  const filteredContacts = filterContacts();\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onFormSubmit={addItemToContacts} />\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} onChangeFilterValue={setFilterValue} />\r\n      {contacts && (\r\n        <ContactList\r\n          filteredContacts={filteredContacts}\r\n          deleteContact={deleteItemFromContacts}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}